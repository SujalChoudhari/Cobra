//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:/Workspace/Cobra/Frontend/Cobra.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class CobraLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINK=1, IMPORT=2, NAMESPACE=3, EXTERNAL=4, CONST=5, IF=6, ELSE=7, WHILE=8, 
		DO=9, FOR=10, IN=11, SWITCH=12, CASE=13, DEFAULT=14, TRY=15, CATCH=16, 
		FINALLY=17, RETURN=18, BREAK=19, CONTINUE=20, INT=21, FLOAT=22, STRING=23, 
		BOOL=24, VOID=25, NULL=26, HANDLE=27, FUN=28, MARKUP=29, DICT=30, TRUE=31, 
		FALSE=32, AS=33, PLUS=34, MINUS=35, MUL=36, DIV=37, MOD=38, PLUS_ASSIGN=39, 
		MINUS_ASSIGN=40, MUL_ASSIGN=41, DIV_ASSIGN=42, MOD_ASSIGN=43, INC=44, 
		DEC=45, ASSIGN=46, EQ=47, NEQ=48, GT=49, LT=50, GTE=51, LTE=52, NOT=53, 
		AND=54, OR=55, BITWISE_AND=56, BITWISE_OR=57, BITWISE_XOR=58, BITWISE_NOT=59, 
		SHL=60, SHR=61, QUESTION=62, LPAREN=63, RPAREN=64, LBRACE=65, RBRACE=66, 
		LBRACKET=67, RBRACKET=68, SEMICOLON=69, COMMA=70, COLON=71, DOT=72, ID=73, 
		STRING_LITERAL=74, BACKTICK_STRING=75, INTEGER=76, FLOAT_LITERAL=77, LINE_COMMENT=78, 
		BLOCK_COMMENT=79, WS=80;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", "WHILE", 
		"DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", "FINALLY", 
		"RETURN", "BREAK", "CONTINUE", "INT", "FLOAT", "STRING", "BOOL", "VOID", 
		"NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", "AS", "PLUS", 
		"MINUS", "MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", "NEQ", "GT", 
		"LT", "GTE", "LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", "BITWISE_XOR", 
		"BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", "DOT", 
		"ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS", "ALL", "EscapeSequence"
	};


	public CobraLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CobraLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'link'", "'import'", "'namespace'", "'external'", "'const'", "'if'", 
		"'else'", "'while'", "'do'", "'for'", "'in'", "'switch'", "'case'", "'default'", 
		"'try'", "'catch'", "'finally'", "'return'", "'break'", "'continue'", 
		"'int'", "'float'", "'string'", "'bool'", "'void'", "'null'", "'handle'", 
		"'fun'", "'markup'", "'dict'", "'true'", "'false'", "'as'", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", 
		"'='", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'!'", "'&&'", "'||'", 
		"'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", "'?'", "'('", "')'", "'{'", 
		"'}'", "'['", "']'", "';'", "','", "':'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", 
		"WHILE", "DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", 
		"FINALLY", "RETURN", "BREAK", "CONTINUE", "INT", "FLOAT", "STRING", "BOOL", 
		"VOID", "NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", "AS", 
		"PLUS", "MINUS", "MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", "NEQ", "GT", 
		"LT", "GTE", "LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", "BITWISE_XOR", 
		"BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", "DOT", 
		"ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Cobra.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CobraLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,80,575,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,1,0,1,0,1,0,1,0,1,0,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
		1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,
		6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,
		1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
		1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
		1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
		1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
		1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
		1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
		1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,
		1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,
		1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,
		1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,
		1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,
		1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,
		1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,
		1,72,1,72,5,72,451,8,72,10,72,12,72,454,9,72,1,73,1,73,5,73,458,8,73,10,
		73,12,73,461,9,73,1,73,1,73,1,74,1,74,1,74,1,74,5,74,469,8,74,10,74,12,
		74,472,9,74,1,74,1,74,1,75,4,75,477,8,75,11,75,12,75,478,1,76,4,76,482,
		8,76,11,76,12,76,483,1,76,1,76,5,76,488,8,76,10,76,12,76,491,9,76,1,76,
		1,76,3,76,495,8,76,1,76,4,76,498,8,76,11,76,12,76,499,3,76,502,8,76,1,
		76,1,76,4,76,506,8,76,11,76,12,76,507,1,76,1,76,3,76,512,8,76,1,76,4,76,
		515,8,76,11,76,12,76,516,3,76,519,8,76,1,76,4,76,522,8,76,11,76,12,76,
		523,1,76,1,76,3,76,528,8,76,1,76,4,76,531,8,76,11,76,12,76,532,3,76,535,
		8,76,1,77,1,77,1,77,1,77,5,77,541,8,77,10,77,12,77,544,9,77,1,77,1,77,
		1,78,1,78,1,78,1,78,5,78,552,8,78,10,78,12,78,555,9,78,1,78,1,78,1,78,
		1,78,1,78,1,79,4,79,563,8,79,11,79,12,79,564,1,79,1,79,1,80,1,80,3,80,
		571,8,80,1,81,1,81,1,81,1,553,0,82,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
		65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
		89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
		111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,
		131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,
		151,76,153,77,155,78,157,79,159,80,161,0,163,0,1,0,10,3,0,65,90,95,95,
		97,122,4,0,48,57,65,90,95,95,97,122,1,0,96,96,1,0,48,57,2,0,69,69,101,
		101,2,0,43,43,45,45,2,0,10,10,13,13,3,0,9,10,13,13,32,32,2,0,34,34,92,
		92,9,0,34,34,39,39,47,47,92,92,98,98,102,102,110,110,114,114,116,116,595,
		0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
		0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,
		0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,1,165,1,0,0,0,3,170,1,0,0,0,5,177,1,0,0,0,7,187,1,0,0,0,9,196,1,0,0,
		0,11,202,1,0,0,0,13,205,1,0,0,0,15,210,1,0,0,0,17,216,1,0,0,0,19,219,1,
		0,0,0,21,223,1,0,0,0,23,226,1,0,0,0,25,233,1,0,0,0,27,238,1,0,0,0,29,246,
		1,0,0,0,31,250,1,0,0,0,33,256,1,0,0,0,35,264,1,0,0,0,37,271,1,0,0,0,39,
		277,1,0,0,0,41,286,1,0,0,0,43,290,1,0,0,0,45,296,1,0,0,0,47,303,1,0,0,
		0,49,308,1,0,0,0,51,313,1,0,0,0,53,318,1,0,0,0,55,325,1,0,0,0,57,329,1,
		0,0,0,59,336,1,0,0,0,61,341,1,0,0,0,63,346,1,0,0,0,65,352,1,0,0,0,67,355,
		1,0,0,0,69,357,1,0,0,0,71,359,1,0,0,0,73,361,1,0,0,0,75,363,1,0,0,0,77,
		365,1,0,0,0,79,368,1,0,0,0,81,371,1,0,0,0,83,374,1,0,0,0,85,377,1,0,0,
		0,87,380,1,0,0,0,89,383,1,0,0,0,91,386,1,0,0,0,93,388,1,0,0,0,95,391,1,
		0,0,0,97,394,1,0,0,0,99,396,1,0,0,0,101,398,1,0,0,0,103,401,1,0,0,0,105,
		404,1,0,0,0,107,406,1,0,0,0,109,409,1,0,0,0,111,412,1,0,0,0,113,414,1,
		0,0,0,115,416,1,0,0,0,117,418,1,0,0,0,119,420,1,0,0,0,121,423,1,0,0,0,
		123,426,1,0,0,0,125,428,1,0,0,0,127,430,1,0,0,0,129,432,1,0,0,0,131,434,
		1,0,0,0,133,436,1,0,0,0,135,438,1,0,0,0,137,440,1,0,0,0,139,442,1,0,0,
		0,141,444,1,0,0,0,143,446,1,0,0,0,145,448,1,0,0,0,147,455,1,0,0,0,149,
		464,1,0,0,0,151,476,1,0,0,0,153,534,1,0,0,0,155,536,1,0,0,0,157,547,1,
		0,0,0,159,562,1,0,0,0,161,570,1,0,0,0,163,572,1,0,0,0,165,166,5,108,0,
		0,166,167,5,105,0,0,167,168,5,110,0,0,168,169,5,107,0,0,169,2,1,0,0,0,
		170,171,5,105,0,0,171,172,5,109,0,0,172,173,5,112,0,0,173,174,5,111,0,
		0,174,175,5,114,0,0,175,176,5,116,0,0,176,4,1,0,0,0,177,178,5,110,0,0,
		178,179,5,97,0,0,179,180,5,109,0,0,180,181,5,101,0,0,181,182,5,115,0,0,
		182,183,5,112,0,0,183,184,5,97,0,0,184,185,5,99,0,0,185,186,5,101,0,0,
		186,6,1,0,0,0,187,188,5,101,0,0,188,189,5,120,0,0,189,190,5,116,0,0,190,
		191,5,101,0,0,191,192,5,114,0,0,192,193,5,110,0,0,193,194,5,97,0,0,194,
		195,5,108,0,0,195,8,1,0,0,0,196,197,5,99,0,0,197,198,5,111,0,0,198,199,
		5,110,0,0,199,200,5,115,0,0,200,201,5,116,0,0,201,10,1,0,0,0,202,203,5,
		105,0,0,203,204,5,102,0,0,204,12,1,0,0,0,205,206,5,101,0,0,206,207,5,108,
		0,0,207,208,5,115,0,0,208,209,5,101,0,0,209,14,1,0,0,0,210,211,5,119,0,
		0,211,212,5,104,0,0,212,213,5,105,0,0,213,214,5,108,0,0,214,215,5,101,
		0,0,215,16,1,0,0,0,216,217,5,100,0,0,217,218,5,111,0,0,218,18,1,0,0,0,
		219,220,5,102,0,0,220,221,5,111,0,0,221,222,5,114,0,0,222,20,1,0,0,0,223,
		224,5,105,0,0,224,225,5,110,0,0,225,22,1,0,0,0,226,227,5,115,0,0,227,228,
		5,119,0,0,228,229,5,105,0,0,229,230,5,116,0,0,230,231,5,99,0,0,231,232,
		5,104,0,0,232,24,1,0,0,0,233,234,5,99,0,0,234,235,5,97,0,0,235,236,5,115,
		0,0,236,237,5,101,0,0,237,26,1,0,0,0,238,239,5,100,0,0,239,240,5,101,0,
		0,240,241,5,102,0,0,241,242,5,97,0,0,242,243,5,117,0,0,243,244,5,108,0,
		0,244,245,5,116,0,0,245,28,1,0,0,0,246,247,5,116,0,0,247,248,5,114,0,0,
		248,249,5,121,0,0,249,30,1,0,0,0,250,251,5,99,0,0,251,252,5,97,0,0,252,
		253,5,116,0,0,253,254,5,99,0,0,254,255,5,104,0,0,255,32,1,0,0,0,256,257,
		5,102,0,0,257,258,5,105,0,0,258,259,5,110,0,0,259,260,5,97,0,0,260,261,
		5,108,0,0,261,262,5,108,0,0,262,263,5,121,0,0,263,34,1,0,0,0,264,265,5,
		114,0,0,265,266,5,101,0,0,266,267,5,116,0,0,267,268,5,117,0,0,268,269,
		5,114,0,0,269,270,5,110,0,0,270,36,1,0,0,0,271,272,5,98,0,0,272,273,5,
		114,0,0,273,274,5,101,0,0,274,275,5,97,0,0,275,276,5,107,0,0,276,38,1,
		0,0,0,277,278,5,99,0,0,278,279,5,111,0,0,279,280,5,110,0,0,280,281,5,116,
		0,0,281,282,5,105,0,0,282,283,5,110,0,0,283,284,5,117,0,0,284,285,5,101,
		0,0,285,40,1,0,0,0,286,287,5,105,0,0,287,288,5,110,0,0,288,289,5,116,0,
		0,289,42,1,0,0,0,290,291,5,102,0,0,291,292,5,108,0,0,292,293,5,111,0,0,
		293,294,5,97,0,0,294,295,5,116,0,0,295,44,1,0,0,0,296,297,5,115,0,0,297,
		298,5,116,0,0,298,299,5,114,0,0,299,300,5,105,0,0,300,301,5,110,0,0,301,
		302,5,103,0,0,302,46,1,0,0,0,303,304,5,98,0,0,304,305,5,111,0,0,305,306,
		5,111,0,0,306,307,5,108,0,0,307,48,1,0,0,0,308,309,5,118,0,0,309,310,5,
		111,0,0,310,311,5,105,0,0,311,312,5,100,0,0,312,50,1,0,0,0,313,314,5,110,
		0,0,314,315,5,117,0,0,315,316,5,108,0,0,316,317,5,108,0,0,317,52,1,0,0,
		0,318,319,5,104,0,0,319,320,5,97,0,0,320,321,5,110,0,0,321,322,5,100,0,
		0,322,323,5,108,0,0,323,324,5,101,0,0,324,54,1,0,0,0,325,326,5,102,0,0,
		326,327,5,117,0,0,327,328,5,110,0,0,328,56,1,0,0,0,329,330,5,109,0,0,330,
		331,5,97,0,0,331,332,5,114,0,0,332,333,5,107,0,0,333,334,5,117,0,0,334,
		335,5,112,0,0,335,58,1,0,0,0,336,337,5,100,0,0,337,338,5,105,0,0,338,339,
		5,99,0,0,339,340,5,116,0,0,340,60,1,0,0,0,341,342,5,116,0,0,342,343,5,
		114,0,0,343,344,5,117,0,0,344,345,5,101,0,0,345,62,1,0,0,0,346,347,5,102,
		0,0,347,348,5,97,0,0,348,349,5,108,0,0,349,350,5,115,0,0,350,351,5,101,
		0,0,351,64,1,0,0,0,352,353,5,97,0,0,353,354,5,115,0,0,354,66,1,0,0,0,355,
		356,5,43,0,0,356,68,1,0,0,0,357,358,5,45,0,0,358,70,1,0,0,0,359,360,5,
		42,0,0,360,72,1,0,0,0,361,362,5,47,0,0,362,74,1,0,0,0,363,364,5,37,0,0,
		364,76,1,0,0,0,365,366,5,43,0,0,366,367,5,61,0,0,367,78,1,0,0,0,368,369,
		5,45,0,0,369,370,5,61,0,0,370,80,1,0,0,0,371,372,5,42,0,0,372,373,5,61,
		0,0,373,82,1,0,0,0,374,375,5,47,0,0,375,376,5,61,0,0,376,84,1,0,0,0,377,
		378,5,37,0,0,378,379,5,61,0,0,379,86,1,0,0,0,380,381,5,43,0,0,381,382,
		5,43,0,0,382,88,1,0,0,0,383,384,5,45,0,0,384,385,5,45,0,0,385,90,1,0,0,
		0,386,387,5,61,0,0,387,92,1,0,0,0,388,389,5,61,0,0,389,390,5,61,0,0,390,
		94,1,0,0,0,391,392,5,33,0,0,392,393,5,61,0,0,393,96,1,0,0,0,394,395,5,
		62,0,0,395,98,1,0,0,0,396,397,5,60,0,0,397,100,1,0,0,0,398,399,5,62,0,
		0,399,400,5,61,0,0,400,102,1,0,0,0,401,402,5,60,0,0,402,403,5,61,0,0,403,
		104,1,0,0,0,404,405,5,33,0,0,405,106,1,0,0,0,406,407,5,38,0,0,407,408,
		5,38,0,0,408,108,1,0,0,0,409,410,5,124,0,0,410,411,5,124,0,0,411,110,1,
		0,0,0,412,413,5,38,0,0,413,112,1,0,0,0,414,415,5,124,0,0,415,114,1,0,0,
		0,416,417,5,94,0,0,417,116,1,0,0,0,418,419,5,126,0,0,419,118,1,0,0,0,420,
		421,5,60,0,0,421,422,5,60,0,0,422,120,1,0,0,0,423,424,5,62,0,0,424,425,
		5,62,0,0,425,122,1,0,0,0,426,427,5,63,0,0,427,124,1,0,0,0,428,429,5,40,
		0,0,429,126,1,0,0,0,430,431,5,41,0,0,431,128,1,0,0,0,432,433,5,123,0,0,
		433,130,1,0,0,0,434,435,5,125,0,0,435,132,1,0,0,0,436,437,5,91,0,0,437,
		134,1,0,0,0,438,439,5,93,0,0,439,136,1,0,0,0,440,441,5,59,0,0,441,138,
		1,0,0,0,442,443,5,44,0,0,443,140,1,0,0,0,444,445,5,58,0,0,445,142,1,0,
		0,0,446,447,5,46,0,0,447,144,1,0,0,0,448,452,7,0,0,0,449,451,7,1,0,0,450,
		449,1,0,0,0,451,454,1,0,0,0,452,450,1,0,0,0,452,453,1,0,0,0,453,146,1,
		0,0,0,454,452,1,0,0,0,455,459,5,34,0,0,456,458,3,161,80,0,457,456,1,0,
		0,0,458,461,1,0,0,0,459,457,1,0,0,0,459,460,1,0,0,0,460,462,1,0,0,0,461,
		459,1,0,0,0,462,463,5,34,0,0,463,148,1,0,0,0,464,470,5,96,0,0,465,469,
		8,2,0,0,466,467,5,96,0,0,467,469,5,96,0,0,468,465,1,0,0,0,468,466,1,0,
		0,0,469,472,1,0,0,0,470,468,1,0,0,0,470,471,1,0,0,0,471,473,1,0,0,0,472,
		470,1,0,0,0,473,474,5,96,0,0,474,150,1,0,0,0,475,477,7,3,0,0,476,475,1,
		0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,0,479,152,1,0,0,0,
		480,482,7,3,0,0,481,480,1,0,0,0,482,483,1,0,0,0,483,481,1,0,0,0,483,484,
		1,0,0,0,484,485,1,0,0,0,485,489,5,46,0,0,486,488,7,3,0,0,487,486,1,0,0,
		0,488,491,1,0,0,0,489,487,1,0,0,0,489,490,1,0,0,0,490,501,1,0,0,0,491,
		489,1,0,0,0,492,494,7,4,0,0,493,495,7,5,0,0,494,493,1,0,0,0,494,495,1,
		0,0,0,495,497,1,0,0,0,496,498,7,3,0,0,497,496,1,0,0,0,498,499,1,0,0,0,
		499,497,1,0,0,0,499,500,1,0,0,0,500,502,1,0,0,0,501,492,1,0,0,0,501,502,
		1,0,0,0,502,535,1,0,0,0,503,505,5,46,0,0,504,506,7,3,0,0,505,504,1,0,0,
		0,506,507,1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,518,1,0,0,0,509,
		511,7,4,0,0,510,512,7,5,0,0,511,510,1,0,0,0,511,512,1,0,0,0,512,514,1,
		0,0,0,513,515,7,3,0,0,514,513,1,0,0,0,515,516,1,0,0,0,516,514,1,0,0,0,
		516,517,1,0,0,0,517,519,1,0,0,0,518,509,1,0,0,0,518,519,1,0,0,0,519,535,
		1,0,0,0,520,522,7,3,0,0,521,520,1,0,0,0,522,523,1,0,0,0,523,521,1,0,0,
		0,523,524,1,0,0,0,524,525,1,0,0,0,525,527,7,4,0,0,526,528,7,5,0,0,527,
		526,1,0,0,0,527,528,1,0,0,0,528,530,1,0,0,0,529,531,7,3,0,0,530,529,1,
		0,0,0,531,532,1,0,0,0,532,530,1,0,0,0,532,533,1,0,0,0,533,535,1,0,0,0,
		534,481,1,0,0,0,534,503,1,0,0,0,534,521,1,0,0,0,535,154,1,0,0,0,536,537,
		5,47,0,0,537,538,5,47,0,0,538,542,1,0,0,0,539,541,8,6,0,0,540,539,1,0,
		0,0,541,544,1,0,0,0,542,540,1,0,0,0,542,543,1,0,0,0,543,545,1,0,0,0,544,
		542,1,0,0,0,545,546,6,77,0,0,546,156,1,0,0,0,547,548,5,47,0,0,548,549,
		5,42,0,0,549,553,1,0,0,0,550,552,9,0,0,0,551,550,1,0,0,0,552,555,1,0,0,
		0,553,554,1,0,0,0,553,551,1,0,0,0,554,556,1,0,0,0,555,553,1,0,0,0,556,
		557,5,42,0,0,557,558,5,47,0,0,558,559,1,0,0,0,559,560,6,78,0,0,560,158,
		1,0,0,0,561,563,7,7,0,0,562,561,1,0,0,0,563,564,1,0,0,0,564,562,1,0,0,
		0,564,565,1,0,0,0,565,566,1,0,0,0,566,567,6,79,0,0,567,160,1,0,0,0,568,
		571,3,163,81,0,569,571,8,8,0,0,570,568,1,0,0,0,570,569,1,0,0,0,571,162,
		1,0,0,0,572,573,5,92,0,0,573,574,7,9,0,0,574,164,1,0,0,0,23,0,452,459,
		468,470,478,483,489,494,499,501,507,511,516,518,523,527,532,534,542,553,
		564,570,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
