//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:/Workspace/Cobra/Frontend/Cobra.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class CobraLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINK=1, IMPORT=2, NAMESPACE=3, EXTERNAL=4, CONST=5, IF=6, ELSE=7, WHILE=8, 
		DO=9, FOR=10, IN=11, SWITCH=12, CASE=13, DEFAULT=14, TRY=15, CATCH=16, 
		FINALLY=17, RETURN=18, BREAK=19, CONTINUE=20, INT=21, FLOAT=22, STRING=23, 
		BOOL=24, VOID=25, NULL=26, HANDLE=27, FUN=28, MARKUP=29, DICT=30, TRUE=31, 
		FALSE=32, PLUS=33, MINUS=34, MUL=35, DIV=36, MOD=37, PLUS_ASSIGN=38, MINUS_ASSIGN=39, 
		MUL_ASSIGN=40, DIV_ASSIGN=41, MOD_ASSIGN=42, INC=43, DEC=44, ASSIGN=45, 
		EQ=46, NEQ=47, GT=48, LT=49, GTE=50, LTE=51, NOT=52, AND=53, OR=54, BITWISE_AND=55, 
		BITWISE_OR=56, BITWISE_XOR=57, BITWISE_NOT=58, SHL=59, SHR=60, QUESTION=61, 
		LPAREN=62, RPAREN=63, LBRACE=64, RBRACE=65, LBRACKET=66, RBRACKET=67, 
		SEMICOLON=68, COMMA=69, COLON=70, DOT=71, ID=72, STRING_LITERAL=73, BACKTICK_STRING=74, 
		INTEGER=75, FLOAT_LITERAL=76, LINE_COMMENT=77, BLOCK_COMMENT=78, WS=79;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", "WHILE", 
		"DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", "FINALLY", 
		"RETURN", "BREAK", "CONTINUE", "INT", "FLOAT", "STRING", "BOOL", "VOID", 
		"NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", "PLUS", "MINUS", 
		"MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", 
		"MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", "NEQ", "GT", "LT", "GTE", 
		"LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", "BITWISE_XOR", 
		"BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", "DOT", 
		"ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS", "ALL", "EscapeSequence"
	};


	public CobraLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CobraLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'link'", "'import'", "'namespace'", "'external'", "'const'", "'if'", 
		"'else'", "'while'", "'do'", "'for'", "'in'", "'switch'", "'case'", "'default'", 
		"'try'", "'catch'", "'finally'", "'return'", "'break'", "'continue'", 
		"'int'", "'float'", "'string'", "'bool'", "'void'", "'null'", "'handle'", 
		"'fun'", "'markup'", "'dict'", "'true'", "'false'", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", 
		"'='", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'!'", "'&&'", "'||'", 
		"'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", "'?'", "'('", "')'", "'{'", 
		"'}'", "'['", "']'", "';'", "','", "':'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", 
		"WHILE", "DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", 
		"FINALLY", "RETURN", "BREAK", "CONTINUE", "INT", "FLOAT", "STRING", "BOOL", 
		"VOID", "NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", "PLUS", 
		"MINUS", "MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", "NEQ", "GT", 
		"LT", "GTE", "LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", "BITWISE_XOR", 
		"BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", "DOT", 
		"ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Cobra.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CobraLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,79,570,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,
		3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
		1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
		1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
		1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
		1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
		1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
		1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,
		1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
		1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,
		1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,
		1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,
		1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,
		1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,48,
		1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,52,1,53,1,53,
		1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,58,1,59,1,59,
		1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,
		1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,5,71,446,8,71,10,
		71,12,71,449,9,71,1,72,1,72,5,72,453,8,72,10,72,12,72,456,9,72,1,72,1,
		72,1,73,1,73,1,73,1,73,5,73,464,8,73,10,73,12,73,467,9,73,1,73,1,73,1,
		74,4,74,472,8,74,11,74,12,74,473,1,75,4,75,477,8,75,11,75,12,75,478,1,
		75,1,75,5,75,483,8,75,10,75,12,75,486,9,75,1,75,1,75,3,75,490,8,75,1,75,
		4,75,493,8,75,11,75,12,75,494,3,75,497,8,75,1,75,1,75,4,75,501,8,75,11,
		75,12,75,502,1,75,1,75,3,75,507,8,75,1,75,4,75,510,8,75,11,75,12,75,511,
		3,75,514,8,75,1,75,4,75,517,8,75,11,75,12,75,518,1,75,1,75,3,75,523,8,
		75,1,75,4,75,526,8,75,11,75,12,75,527,3,75,530,8,75,1,76,1,76,1,76,1,76,
		5,76,536,8,76,10,76,12,76,539,9,76,1,76,1,76,1,77,1,77,1,77,1,77,5,77,
		547,8,77,10,77,12,77,550,9,77,1,77,1,77,1,77,1,77,1,77,1,78,4,78,558,8,
		78,11,78,12,78,559,1,78,1,78,1,79,1,79,3,79,566,8,79,1,80,1,80,1,80,1,
		548,0,81,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
		13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
		25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
		37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
		49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
		119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,
		139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,
		159,0,161,0,1,0,10,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
		1,0,96,96,1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,2,0,10,10,13,13,
		3,0,9,10,13,13,32,32,2,0,34,34,92,92,9,0,34,34,39,39,47,47,92,92,98,98,
		102,102,110,110,114,114,116,116,590,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
		0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
		1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
		0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
		1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
		0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
		105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,
		115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,
		125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,
		135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,
		145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
		155,1,0,0,0,0,157,1,0,0,0,1,163,1,0,0,0,3,168,1,0,0,0,5,175,1,0,0,0,7,
		185,1,0,0,0,9,194,1,0,0,0,11,200,1,0,0,0,13,203,1,0,0,0,15,208,1,0,0,0,
		17,214,1,0,0,0,19,217,1,0,0,0,21,221,1,0,0,0,23,224,1,0,0,0,25,231,1,0,
		0,0,27,236,1,0,0,0,29,244,1,0,0,0,31,248,1,0,0,0,33,254,1,0,0,0,35,262,
		1,0,0,0,37,269,1,0,0,0,39,275,1,0,0,0,41,284,1,0,0,0,43,288,1,0,0,0,45,
		294,1,0,0,0,47,301,1,0,0,0,49,306,1,0,0,0,51,311,1,0,0,0,53,316,1,0,0,
		0,55,323,1,0,0,0,57,327,1,0,0,0,59,334,1,0,0,0,61,339,1,0,0,0,63,344,1,
		0,0,0,65,350,1,0,0,0,67,352,1,0,0,0,69,354,1,0,0,0,71,356,1,0,0,0,73,358,
		1,0,0,0,75,360,1,0,0,0,77,363,1,0,0,0,79,366,1,0,0,0,81,369,1,0,0,0,83,
		372,1,0,0,0,85,375,1,0,0,0,87,378,1,0,0,0,89,381,1,0,0,0,91,383,1,0,0,
		0,93,386,1,0,0,0,95,389,1,0,0,0,97,391,1,0,0,0,99,393,1,0,0,0,101,396,
		1,0,0,0,103,399,1,0,0,0,105,401,1,0,0,0,107,404,1,0,0,0,109,407,1,0,0,
		0,111,409,1,0,0,0,113,411,1,0,0,0,115,413,1,0,0,0,117,415,1,0,0,0,119,
		418,1,0,0,0,121,421,1,0,0,0,123,423,1,0,0,0,125,425,1,0,0,0,127,427,1,
		0,0,0,129,429,1,0,0,0,131,431,1,0,0,0,133,433,1,0,0,0,135,435,1,0,0,0,
		137,437,1,0,0,0,139,439,1,0,0,0,141,441,1,0,0,0,143,443,1,0,0,0,145,450,
		1,0,0,0,147,459,1,0,0,0,149,471,1,0,0,0,151,529,1,0,0,0,153,531,1,0,0,
		0,155,542,1,0,0,0,157,557,1,0,0,0,159,565,1,0,0,0,161,567,1,0,0,0,163,
		164,5,108,0,0,164,165,5,105,0,0,165,166,5,110,0,0,166,167,5,107,0,0,167,
		2,1,0,0,0,168,169,5,105,0,0,169,170,5,109,0,0,170,171,5,112,0,0,171,172,
		5,111,0,0,172,173,5,114,0,0,173,174,5,116,0,0,174,4,1,0,0,0,175,176,5,
		110,0,0,176,177,5,97,0,0,177,178,5,109,0,0,178,179,5,101,0,0,179,180,5,
		115,0,0,180,181,5,112,0,0,181,182,5,97,0,0,182,183,5,99,0,0,183,184,5,
		101,0,0,184,6,1,0,0,0,185,186,5,101,0,0,186,187,5,120,0,0,187,188,5,116,
		0,0,188,189,5,101,0,0,189,190,5,114,0,0,190,191,5,110,0,0,191,192,5,97,
		0,0,192,193,5,108,0,0,193,8,1,0,0,0,194,195,5,99,0,0,195,196,5,111,0,0,
		196,197,5,110,0,0,197,198,5,115,0,0,198,199,5,116,0,0,199,10,1,0,0,0,200,
		201,5,105,0,0,201,202,5,102,0,0,202,12,1,0,0,0,203,204,5,101,0,0,204,205,
		5,108,0,0,205,206,5,115,0,0,206,207,5,101,0,0,207,14,1,0,0,0,208,209,5,
		119,0,0,209,210,5,104,0,0,210,211,5,105,0,0,211,212,5,108,0,0,212,213,
		5,101,0,0,213,16,1,0,0,0,214,215,5,100,0,0,215,216,5,111,0,0,216,18,1,
		0,0,0,217,218,5,102,0,0,218,219,5,111,0,0,219,220,5,114,0,0,220,20,1,0,
		0,0,221,222,5,105,0,0,222,223,5,110,0,0,223,22,1,0,0,0,224,225,5,115,0,
		0,225,226,5,119,0,0,226,227,5,105,0,0,227,228,5,116,0,0,228,229,5,99,0,
		0,229,230,5,104,0,0,230,24,1,0,0,0,231,232,5,99,0,0,232,233,5,97,0,0,233,
		234,5,115,0,0,234,235,5,101,0,0,235,26,1,0,0,0,236,237,5,100,0,0,237,238,
		5,101,0,0,238,239,5,102,0,0,239,240,5,97,0,0,240,241,5,117,0,0,241,242,
		5,108,0,0,242,243,5,116,0,0,243,28,1,0,0,0,244,245,5,116,0,0,245,246,5,
		114,0,0,246,247,5,121,0,0,247,30,1,0,0,0,248,249,5,99,0,0,249,250,5,97,
		0,0,250,251,5,116,0,0,251,252,5,99,0,0,252,253,5,104,0,0,253,32,1,0,0,
		0,254,255,5,102,0,0,255,256,5,105,0,0,256,257,5,110,0,0,257,258,5,97,0,
		0,258,259,5,108,0,0,259,260,5,108,0,0,260,261,5,121,0,0,261,34,1,0,0,0,
		262,263,5,114,0,0,263,264,5,101,0,0,264,265,5,116,0,0,265,266,5,117,0,
		0,266,267,5,114,0,0,267,268,5,110,0,0,268,36,1,0,0,0,269,270,5,98,0,0,
		270,271,5,114,0,0,271,272,5,101,0,0,272,273,5,97,0,0,273,274,5,107,0,0,
		274,38,1,0,0,0,275,276,5,99,0,0,276,277,5,111,0,0,277,278,5,110,0,0,278,
		279,5,116,0,0,279,280,5,105,0,0,280,281,5,110,0,0,281,282,5,117,0,0,282,
		283,5,101,0,0,283,40,1,0,0,0,284,285,5,105,0,0,285,286,5,110,0,0,286,287,
		5,116,0,0,287,42,1,0,0,0,288,289,5,102,0,0,289,290,5,108,0,0,290,291,5,
		111,0,0,291,292,5,97,0,0,292,293,5,116,0,0,293,44,1,0,0,0,294,295,5,115,
		0,0,295,296,5,116,0,0,296,297,5,114,0,0,297,298,5,105,0,0,298,299,5,110,
		0,0,299,300,5,103,0,0,300,46,1,0,0,0,301,302,5,98,0,0,302,303,5,111,0,
		0,303,304,5,111,0,0,304,305,5,108,0,0,305,48,1,0,0,0,306,307,5,118,0,0,
		307,308,5,111,0,0,308,309,5,105,0,0,309,310,5,100,0,0,310,50,1,0,0,0,311,
		312,5,110,0,0,312,313,5,117,0,0,313,314,5,108,0,0,314,315,5,108,0,0,315,
		52,1,0,0,0,316,317,5,104,0,0,317,318,5,97,0,0,318,319,5,110,0,0,319,320,
		5,100,0,0,320,321,5,108,0,0,321,322,5,101,0,0,322,54,1,0,0,0,323,324,5,
		102,0,0,324,325,5,117,0,0,325,326,5,110,0,0,326,56,1,0,0,0,327,328,5,109,
		0,0,328,329,5,97,0,0,329,330,5,114,0,0,330,331,5,107,0,0,331,332,5,117,
		0,0,332,333,5,112,0,0,333,58,1,0,0,0,334,335,5,100,0,0,335,336,5,105,0,
		0,336,337,5,99,0,0,337,338,5,116,0,0,338,60,1,0,0,0,339,340,5,116,0,0,
		340,341,5,114,0,0,341,342,5,117,0,0,342,343,5,101,0,0,343,62,1,0,0,0,344,
		345,5,102,0,0,345,346,5,97,0,0,346,347,5,108,0,0,347,348,5,115,0,0,348,
		349,5,101,0,0,349,64,1,0,0,0,350,351,5,43,0,0,351,66,1,0,0,0,352,353,5,
		45,0,0,353,68,1,0,0,0,354,355,5,42,0,0,355,70,1,0,0,0,356,357,5,47,0,0,
		357,72,1,0,0,0,358,359,5,37,0,0,359,74,1,0,0,0,360,361,5,43,0,0,361,362,
		5,61,0,0,362,76,1,0,0,0,363,364,5,45,0,0,364,365,5,61,0,0,365,78,1,0,0,
		0,366,367,5,42,0,0,367,368,5,61,0,0,368,80,1,0,0,0,369,370,5,47,0,0,370,
		371,5,61,0,0,371,82,1,0,0,0,372,373,5,37,0,0,373,374,5,61,0,0,374,84,1,
		0,0,0,375,376,5,43,0,0,376,377,5,43,0,0,377,86,1,0,0,0,378,379,5,45,0,
		0,379,380,5,45,0,0,380,88,1,0,0,0,381,382,5,61,0,0,382,90,1,0,0,0,383,
		384,5,61,0,0,384,385,5,61,0,0,385,92,1,0,0,0,386,387,5,33,0,0,387,388,
		5,61,0,0,388,94,1,0,0,0,389,390,5,62,0,0,390,96,1,0,0,0,391,392,5,60,0,
		0,392,98,1,0,0,0,393,394,5,62,0,0,394,395,5,61,0,0,395,100,1,0,0,0,396,
		397,5,60,0,0,397,398,5,61,0,0,398,102,1,0,0,0,399,400,5,33,0,0,400,104,
		1,0,0,0,401,402,5,38,0,0,402,403,5,38,0,0,403,106,1,0,0,0,404,405,5,124,
		0,0,405,406,5,124,0,0,406,108,1,0,0,0,407,408,5,38,0,0,408,110,1,0,0,0,
		409,410,5,124,0,0,410,112,1,0,0,0,411,412,5,94,0,0,412,114,1,0,0,0,413,
		414,5,126,0,0,414,116,1,0,0,0,415,416,5,60,0,0,416,417,5,60,0,0,417,118,
		1,0,0,0,418,419,5,62,0,0,419,420,5,62,0,0,420,120,1,0,0,0,421,422,5,63,
		0,0,422,122,1,0,0,0,423,424,5,40,0,0,424,124,1,0,0,0,425,426,5,41,0,0,
		426,126,1,0,0,0,427,428,5,123,0,0,428,128,1,0,0,0,429,430,5,125,0,0,430,
		130,1,0,0,0,431,432,5,91,0,0,432,132,1,0,0,0,433,434,5,93,0,0,434,134,
		1,0,0,0,435,436,5,59,0,0,436,136,1,0,0,0,437,438,5,44,0,0,438,138,1,0,
		0,0,439,440,5,58,0,0,440,140,1,0,0,0,441,442,5,46,0,0,442,142,1,0,0,0,
		443,447,7,0,0,0,444,446,7,1,0,0,445,444,1,0,0,0,446,449,1,0,0,0,447,445,
		1,0,0,0,447,448,1,0,0,0,448,144,1,0,0,0,449,447,1,0,0,0,450,454,5,34,0,
		0,451,453,3,159,79,0,452,451,1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,
		455,1,0,0,0,455,457,1,0,0,0,456,454,1,0,0,0,457,458,5,34,0,0,458,146,1,
		0,0,0,459,465,5,96,0,0,460,464,8,2,0,0,461,462,5,96,0,0,462,464,5,96,0,
		0,463,460,1,0,0,0,463,461,1,0,0,0,464,467,1,0,0,0,465,463,1,0,0,0,465,
		466,1,0,0,0,466,468,1,0,0,0,467,465,1,0,0,0,468,469,5,96,0,0,469,148,1,
		0,0,0,470,472,7,3,0,0,471,470,1,0,0,0,472,473,1,0,0,0,473,471,1,0,0,0,
		473,474,1,0,0,0,474,150,1,0,0,0,475,477,7,3,0,0,476,475,1,0,0,0,477,478,
		1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,0,479,480,1,0,0,0,480,484,5,46,0,
		0,481,483,7,3,0,0,482,481,1,0,0,0,483,486,1,0,0,0,484,482,1,0,0,0,484,
		485,1,0,0,0,485,496,1,0,0,0,486,484,1,0,0,0,487,489,7,4,0,0,488,490,7,
		5,0,0,489,488,1,0,0,0,489,490,1,0,0,0,490,492,1,0,0,0,491,493,7,3,0,0,
		492,491,1,0,0,0,493,494,1,0,0,0,494,492,1,0,0,0,494,495,1,0,0,0,495,497,
		1,0,0,0,496,487,1,0,0,0,496,497,1,0,0,0,497,530,1,0,0,0,498,500,5,46,0,
		0,499,501,7,3,0,0,500,499,1,0,0,0,501,502,1,0,0,0,502,500,1,0,0,0,502,
		503,1,0,0,0,503,513,1,0,0,0,504,506,7,4,0,0,505,507,7,5,0,0,506,505,1,
		0,0,0,506,507,1,0,0,0,507,509,1,0,0,0,508,510,7,3,0,0,509,508,1,0,0,0,
		510,511,1,0,0,0,511,509,1,0,0,0,511,512,1,0,0,0,512,514,1,0,0,0,513,504,
		1,0,0,0,513,514,1,0,0,0,514,530,1,0,0,0,515,517,7,3,0,0,516,515,1,0,0,
		0,517,518,1,0,0,0,518,516,1,0,0,0,518,519,1,0,0,0,519,520,1,0,0,0,520,
		522,7,4,0,0,521,523,7,5,0,0,522,521,1,0,0,0,522,523,1,0,0,0,523,525,1,
		0,0,0,524,526,7,3,0,0,525,524,1,0,0,0,526,527,1,0,0,0,527,525,1,0,0,0,
		527,528,1,0,0,0,528,530,1,0,0,0,529,476,1,0,0,0,529,498,1,0,0,0,529,516,
		1,0,0,0,530,152,1,0,0,0,531,532,5,47,0,0,532,533,5,47,0,0,533,537,1,0,
		0,0,534,536,8,6,0,0,535,534,1,0,0,0,536,539,1,0,0,0,537,535,1,0,0,0,537,
		538,1,0,0,0,538,540,1,0,0,0,539,537,1,0,0,0,540,541,6,76,0,0,541,154,1,
		0,0,0,542,543,5,47,0,0,543,544,5,42,0,0,544,548,1,0,0,0,545,547,9,0,0,
		0,546,545,1,0,0,0,547,550,1,0,0,0,548,549,1,0,0,0,548,546,1,0,0,0,549,
		551,1,0,0,0,550,548,1,0,0,0,551,552,5,42,0,0,552,553,5,47,0,0,553,554,
		1,0,0,0,554,555,6,77,0,0,555,156,1,0,0,0,556,558,7,7,0,0,557,556,1,0,0,
		0,558,559,1,0,0,0,559,557,1,0,0,0,559,560,1,0,0,0,560,561,1,0,0,0,561,
		562,6,78,0,0,562,158,1,0,0,0,563,566,3,161,80,0,564,566,8,8,0,0,565,563,
		1,0,0,0,565,564,1,0,0,0,566,160,1,0,0,0,567,568,5,92,0,0,568,569,7,9,0,
		0,569,162,1,0,0,0,23,0,447,454,463,465,473,478,484,489,494,496,502,506,
		511,513,518,522,527,529,537,548,559,565,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
