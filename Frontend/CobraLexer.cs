//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:/Workspace/Cobra/Frontend/Cobra.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class CobraLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LINK=1, IMPORT=2, NAMESPACE=3, EXTERNAL=4, CONST=5, IF=6, ELSE=7, WHILE=8, 
		DO=9, FOR=10, IN=11, SWITCH=12, CASE=13, DEFAULT=14, TRY=15, CATCH=16, 
		FINALLY=17, RETURN=18, BREAK=19, CONTINUE=20, THROW=21, CLASS=22, ENUM=23, 
		NEW=24, THIS=25, STATIC=26, PUBLIC=27, PRIVATE=28, CONSTRUCTOR=29, DESTRUCTOR=30, 
		DUNDER_FILE=31, DUNDER_LINE=32, DUNDER_FUNC=33, INT=34, LONG=35, I8=36, 
		I16=37, I32=38, I64=39, UINT=40, U8=41, U16=42, U32=43, U64=44, FLOAT=45, 
		DOUBLE=46, F32=47, F64=48, STRING=49, BOOL=50, VOID=51, NULL=52, HANDLE=53, 
		FUN=54, MARKUP=55, DICT=56, TRUE=57, FALSE=58, AS=59, PLUS=60, MINUS=61, 
		MUL=62, DIV=63, MOD=64, PLUS_ASSIGN=65, MINUS_ASSIGN=66, MUL_ASSIGN=67, 
		DIV_ASSIGN=68, MOD_ASSIGN=69, INC=70, DEC=71, ASSIGN=72, EQ=73, NEQ=74, 
		GT=75, LT=76, GTE=77, LTE=78, NOT=79, AND=80, OR=81, BITWISE_AND=82, BITWISE_OR=83, 
		BITWISE_XOR=84, BITWISE_NOT=85, SHL=86, SHR=87, QUESTION=88, LPAREN=89, 
		RPAREN=90, LBRACE=91, RBRACE=92, LBRACKET=93, RBRACKET=94, SEMICOLON=95, 
		COMMA=96, COLON=97, DOT=98, ID=99, STRING_LITERAL=100, BACKTICK_STRING=101, 
		INTEGER=102, FLOAT_LITERAL=103, LINE_COMMENT=104, BLOCK_COMMENT=105, WS=106;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", "WHILE", 
		"DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", "FINALLY", 
		"RETURN", "BREAK", "CONTINUE", "THROW", "CLASS", "ENUM", "NEW", "THIS", 
		"STATIC", "PUBLIC", "PRIVATE", "CONSTRUCTOR", "DESTRUCTOR", "DUNDER_FILE", 
		"DUNDER_LINE", "DUNDER_FUNC", "INT", "LONG", "I8", "I16", "I32", "I64", 
		"UINT", "U8", "U16", "U32", "U64", "FLOAT", "DOUBLE", "F32", "F64", "STRING", 
		"BOOL", "VOID", "NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", 
		"AS", "PLUS", "MINUS", "MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", 
		"NEQ", "GT", "LT", "GTE", "LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", 
		"BITWISE_XOR", "BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", 
		"DOT", "ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS", "ALL", "EscapeSequence"
	};


	public CobraLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CobraLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'link'", "'import'", "'namespace'", "'external'", "'const'", "'if'", 
		"'else'", "'while'", "'do'", "'for'", "'in'", "'switch'", "'case'", "'default'", 
		"'try'", "'catch'", "'finally'", "'return'", "'break'", "'continue'", 
		"'throw'", "'class'", "'enum'", "'new'", "'this'", "'static'", "'public'", 
		"'private'", "'constructor'", "'destructor'", "'__FILE__'", "'__LINE__'", 
		"'__FUNC__'", "'int'", "'long'", "'i8'", "'i16'", "'i32'", "'i64'", "'uint'", 
		"'u8'", "'u16'", "'u32'", "'u64'", "'float'", "'double'", "'f32'", "'f64'", 
		"'string'", "'bool'", "'void'", "'null'", "'handle'", "'fun'", "'markup'", 
		"'dict'", "'true'", "'false'", "'as'", "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", "'='", "'=='", 
		"'!='", "'>'", "'<'", "'>='", "'<='", "'!'", "'&&'", "'||'", "'&'", "'|'", 
		"'^'", "'~'", "'<<'", "'>>'", "'?'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'", "';'", "','", "':'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LINK", "IMPORT", "NAMESPACE", "EXTERNAL", "CONST", "IF", "ELSE", 
		"WHILE", "DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "TRY", "CATCH", 
		"FINALLY", "RETURN", "BREAK", "CONTINUE", "THROW", "CLASS", "ENUM", "NEW", 
		"THIS", "STATIC", "PUBLIC", "PRIVATE", "CONSTRUCTOR", "DESTRUCTOR", "DUNDER_FILE", 
		"DUNDER_LINE", "DUNDER_FUNC", "INT", "LONG", "I8", "I16", "I32", "I64", 
		"UINT", "U8", "U16", "U32", "U64", "FLOAT", "DOUBLE", "F32", "F64", "STRING", 
		"BOOL", "VOID", "NULL", "HANDLE", "FUN", "MARKUP", "DICT", "TRUE", "FALSE", 
		"AS", "PLUS", "MINUS", "MUL", "DIV", "MOD", "PLUS_ASSIGN", "MINUS_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", "INC", "DEC", "ASSIGN", "EQ", 
		"NEQ", "GT", "LT", "GTE", "LTE", "NOT", "AND", "OR", "BITWISE_AND", "BITWISE_OR", 
		"BITWISE_XOR", "BITWISE_NOT", "SHL", "SHR", "QUESTION", "LPAREN", "RPAREN", 
		"LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", 
		"DOT", "ID", "STRING_LITERAL", "BACKTICK_STRING", "INTEGER", "FLOAT_LITERAL", 
		"LINE_COMMENT", "BLOCK_COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Cobra.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CobraLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,106,780,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
		7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,
		104,2,105,7,105,2,106,7,106,2,107,7,107,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
		1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,
		6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,
		1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
		1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
		1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
		1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,
		1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
		1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,
		1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
		1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
		1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,
		1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
		1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,
		1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
		1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
		1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,
		1,52,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,
		1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,
		1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,
		1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,
		1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,73,
		1,74,1,74,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,79,1,79,
		1,79,1,80,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,
		1,85,1,86,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,
		1,92,1,92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,98,
		5,98,656,8,98,10,98,12,98,659,9,98,1,99,1,99,5,99,663,8,99,10,99,12,99,
		666,9,99,1,99,1,99,1,100,1,100,1,100,1,100,5,100,674,8,100,10,100,12,100,
		677,9,100,1,100,1,100,1,101,4,101,682,8,101,11,101,12,101,683,1,102,4,
		102,687,8,102,11,102,12,102,688,1,102,1,102,5,102,693,8,102,10,102,12,
		102,696,9,102,1,102,1,102,3,102,700,8,102,1,102,4,102,703,8,102,11,102,
		12,102,704,3,102,707,8,102,1,102,1,102,4,102,711,8,102,11,102,12,102,712,
		1,102,1,102,3,102,717,8,102,1,102,4,102,720,8,102,11,102,12,102,721,3,
		102,724,8,102,1,102,4,102,727,8,102,11,102,12,102,728,1,102,1,102,3,102,
		733,8,102,1,102,4,102,736,8,102,11,102,12,102,737,3,102,740,8,102,1,103,
		1,103,1,103,1,103,5,103,746,8,103,10,103,12,103,749,9,103,1,103,1,103,
		1,104,1,104,1,104,1,104,5,104,757,8,104,10,104,12,104,760,9,104,1,104,
		1,104,1,104,1,104,1,104,1,105,4,105,768,8,105,11,105,12,105,769,1,105,
		1,105,1,106,1,106,3,106,776,8,106,1,107,1,107,1,107,1,758,0,108,1,1,3,
		2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
		31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
		55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
		79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
		51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,
		61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,
		71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,
		81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,
		91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,
		101,203,102,205,103,207,104,209,105,211,106,213,0,215,0,1,0,10,3,0,65,
		90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,96,96,1,0,48,57,2,0,69,
		69,101,101,2,0,43,43,45,45,2,0,10,10,13,13,3,0,9,10,13,13,32,32,2,0,34,
		34,92,92,9,0,34,34,39,39,47,47,92,92,98,98,102,102,110,110,114,114,116,
		116,800,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
		11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
		0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
		0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
		1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
		0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
		1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,
		0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
		1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
		0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
		0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,
		0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,
		0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,
		0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,
		0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,
		0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,
		0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,
		0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,
		0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,
		0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,
		0,209,1,0,0,0,0,211,1,0,0,0,1,217,1,0,0,0,3,222,1,0,0,0,5,229,1,0,0,0,
		7,239,1,0,0,0,9,248,1,0,0,0,11,254,1,0,0,0,13,257,1,0,0,0,15,262,1,0,0,
		0,17,268,1,0,0,0,19,271,1,0,0,0,21,275,1,0,0,0,23,278,1,0,0,0,25,285,1,
		0,0,0,27,290,1,0,0,0,29,298,1,0,0,0,31,302,1,0,0,0,33,308,1,0,0,0,35,316,
		1,0,0,0,37,323,1,0,0,0,39,329,1,0,0,0,41,338,1,0,0,0,43,344,1,0,0,0,45,
		350,1,0,0,0,47,355,1,0,0,0,49,359,1,0,0,0,51,364,1,0,0,0,53,371,1,0,0,
		0,55,378,1,0,0,0,57,386,1,0,0,0,59,398,1,0,0,0,61,409,1,0,0,0,63,418,1,
		0,0,0,65,427,1,0,0,0,67,436,1,0,0,0,69,440,1,0,0,0,71,445,1,0,0,0,73,448,
		1,0,0,0,75,452,1,0,0,0,77,456,1,0,0,0,79,460,1,0,0,0,81,465,1,0,0,0,83,
		468,1,0,0,0,85,472,1,0,0,0,87,476,1,0,0,0,89,480,1,0,0,0,91,486,1,0,0,
		0,93,493,1,0,0,0,95,497,1,0,0,0,97,501,1,0,0,0,99,508,1,0,0,0,101,513,
		1,0,0,0,103,518,1,0,0,0,105,523,1,0,0,0,107,530,1,0,0,0,109,534,1,0,0,
		0,111,541,1,0,0,0,113,546,1,0,0,0,115,551,1,0,0,0,117,557,1,0,0,0,119,
		560,1,0,0,0,121,562,1,0,0,0,123,564,1,0,0,0,125,566,1,0,0,0,127,568,1,
		0,0,0,129,570,1,0,0,0,131,573,1,0,0,0,133,576,1,0,0,0,135,579,1,0,0,0,
		137,582,1,0,0,0,139,585,1,0,0,0,141,588,1,0,0,0,143,591,1,0,0,0,145,593,
		1,0,0,0,147,596,1,0,0,0,149,599,1,0,0,0,151,601,1,0,0,0,153,603,1,0,0,
		0,155,606,1,0,0,0,157,609,1,0,0,0,159,611,1,0,0,0,161,614,1,0,0,0,163,
		617,1,0,0,0,165,619,1,0,0,0,167,621,1,0,0,0,169,623,1,0,0,0,171,625,1,
		0,0,0,173,628,1,0,0,0,175,631,1,0,0,0,177,633,1,0,0,0,179,635,1,0,0,0,
		181,637,1,0,0,0,183,639,1,0,0,0,185,641,1,0,0,0,187,643,1,0,0,0,189,645,
		1,0,0,0,191,647,1,0,0,0,193,649,1,0,0,0,195,651,1,0,0,0,197,653,1,0,0,
		0,199,660,1,0,0,0,201,669,1,0,0,0,203,681,1,0,0,0,205,739,1,0,0,0,207,
		741,1,0,0,0,209,752,1,0,0,0,211,767,1,0,0,0,213,775,1,0,0,0,215,777,1,
		0,0,0,217,218,5,108,0,0,218,219,5,105,0,0,219,220,5,110,0,0,220,221,5,
		107,0,0,221,2,1,0,0,0,222,223,5,105,0,0,223,224,5,109,0,0,224,225,5,112,
		0,0,225,226,5,111,0,0,226,227,5,114,0,0,227,228,5,116,0,0,228,4,1,0,0,
		0,229,230,5,110,0,0,230,231,5,97,0,0,231,232,5,109,0,0,232,233,5,101,0,
		0,233,234,5,115,0,0,234,235,5,112,0,0,235,236,5,97,0,0,236,237,5,99,0,
		0,237,238,5,101,0,0,238,6,1,0,0,0,239,240,5,101,0,0,240,241,5,120,0,0,
		241,242,5,116,0,0,242,243,5,101,0,0,243,244,5,114,0,0,244,245,5,110,0,
		0,245,246,5,97,0,0,246,247,5,108,0,0,247,8,1,0,0,0,248,249,5,99,0,0,249,
		250,5,111,0,0,250,251,5,110,0,0,251,252,5,115,0,0,252,253,5,116,0,0,253,
		10,1,0,0,0,254,255,5,105,0,0,255,256,5,102,0,0,256,12,1,0,0,0,257,258,
		5,101,0,0,258,259,5,108,0,0,259,260,5,115,0,0,260,261,5,101,0,0,261,14,
		1,0,0,0,262,263,5,119,0,0,263,264,5,104,0,0,264,265,5,105,0,0,265,266,
		5,108,0,0,266,267,5,101,0,0,267,16,1,0,0,0,268,269,5,100,0,0,269,270,5,
		111,0,0,270,18,1,0,0,0,271,272,5,102,0,0,272,273,5,111,0,0,273,274,5,114,
		0,0,274,20,1,0,0,0,275,276,5,105,0,0,276,277,5,110,0,0,277,22,1,0,0,0,
		278,279,5,115,0,0,279,280,5,119,0,0,280,281,5,105,0,0,281,282,5,116,0,
		0,282,283,5,99,0,0,283,284,5,104,0,0,284,24,1,0,0,0,285,286,5,99,0,0,286,
		287,5,97,0,0,287,288,5,115,0,0,288,289,5,101,0,0,289,26,1,0,0,0,290,291,
		5,100,0,0,291,292,5,101,0,0,292,293,5,102,0,0,293,294,5,97,0,0,294,295,
		5,117,0,0,295,296,5,108,0,0,296,297,5,116,0,0,297,28,1,0,0,0,298,299,5,
		116,0,0,299,300,5,114,0,0,300,301,5,121,0,0,301,30,1,0,0,0,302,303,5,99,
		0,0,303,304,5,97,0,0,304,305,5,116,0,0,305,306,5,99,0,0,306,307,5,104,
		0,0,307,32,1,0,0,0,308,309,5,102,0,0,309,310,5,105,0,0,310,311,5,110,0,
		0,311,312,5,97,0,0,312,313,5,108,0,0,313,314,5,108,0,0,314,315,5,121,0,
		0,315,34,1,0,0,0,316,317,5,114,0,0,317,318,5,101,0,0,318,319,5,116,0,0,
		319,320,5,117,0,0,320,321,5,114,0,0,321,322,5,110,0,0,322,36,1,0,0,0,323,
		324,5,98,0,0,324,325,5,114,0,0,325,326,5,101,0,0,326,327,5,97,0,0,327,
		328,5,107,0,0,328,38,1,0,0,0,329,330,5,99,0,0,330,331,5,111,0,0,331,332,
		5,110,0,0,332,333,5,116,0,0,333,334,5,105,0,0,334,335,5,110,0,0,335,336,
		5,117,0,0,336,337,5,101,0,0,337,40,1,0,0,0,338,339,5,116,0,0,339,340,5,
		104,0,0,340,341,5,114,0,0,341,342,5,111,0,0,342,343,5,119,0,0,343,42,1,
		0,0,0,344,345,5,99,0,0,345,346,5,108,0,0,346,347,5,97,0,0,347,348,5,115,
		0,0,348,349,5,115,0,0,349,44,1,0,0,0,350,351,5,101,0,0,351,352,5,110,0,
		0,352,353,5,117,0,0,353,354,5,109,0,0,354,46,1,0,0,0,355,356,5,110,0,0,
		356,357,5,101,0,0,357,358,5,119,0,0,358,48,1,0,0,0,359,360,5,116,0,0,360,
		361,5,104,0,0,361,362,5,105,0,0,362,363,5,115,0,0,363,50,1,0,0,0,364,365,
		5,115,0,0,365,366,5,116,0,0,366,367,5,97,0,0,367,368,5,116,0,0,368,369,
		5,105,0,0,369,370,5,99,0,0,370,52,1,0,0,0,371,372,5,112,0,0,372,373,5,
		117,0,0,373,374,5,98,0,0,374,375,5,108,0,0,375,376,5,105,0,0,376,377,5,
		99,0,0,377,54,1,0,0,0,378,379,5,112,0,0,379,380,5,114,0,0,380,381,5,105,
		0,0,381,382,5,118,0,0,382,383,5,97,0,0,383,384,5,116,0,0,384,385,5,101,
		0,0,385,56,1,0,0,0,386,387,5,99,0,0,387,388,5,111,0,0,388,389,5,110,0,
		0,389,390,5,115,0,0,390,391,5,116,0,0,391,392,5,114,0,0,392,393,5,117,
		0,0,393,394,5,99,0,0,394,395,5,116,0,0,395,396,5,111,0,0,396,397,5,114,
		0,0,397,58,1,0,0,0,398,399,5,100,0,0,399,400,5,101,0,0,400,401,5,115,0,
		0,401,402,5,116,0,0,402,403,5,114,0,0,403,404,5,117,0,0,404,405,5,99,0,
		0,405,406,5,116,0,0,406,407,5,111,0,0,407,408,5,114,0,0,408,60,1,0,0,0,
		409,410,5,95,0,0,410,411,5,95,0,0,411,412,5,70,0,0,412,413,5,73,0,0,413,
		414,5,76,0,0,414,415,5,69,0,0,415,416,5,95,0,0,416,417,5,95,0,0,417,62,
		1,0,0,0,418,419,5,95,0,0,419,420,5,95,0,0,420,421,5,76,0,0,421,422,5,73,
		0,0,422,423,5,78,0,0,423,424,5,69,0,0,424,425,5,95,0,0,425,426,5,95,0,
		0,426,64,1,0,0,0,427,428,5,95,0,0,428,429,5,95,0,0,429,430,5,70,0,0,430,
		431,5,85,0,0,431,432,5,78,0,0,432,433,5,67,0,0,433,434,5,95,0,0,434,435,
		5,95,0,0,435,66,1,0,0,0,436,437,5,105,0,0,437,438,5,110,0,0,438,439,5,
		116,0,0,439,68,1,0,0,0,440,441,5,108,0,0,441,442,5,111,0,0,442,443,5,110,
		0,0,443,444,5,103,0,0,444,70,1,0,0,0,445,446,5,105,0,0,446,447,5,56,0,
		0,447,72,1,0,0,0,448,449,5,105,0,0,449,450,5,49,0,0,450,451,5,54,0,0,451,
		74,1,0,0,0,452,453,5,105,0,0,453,454,5,51,0,0,454,455,5,50,0,0,455,76,
		1,0,0,0,456,457,5,105,0,0,457,458,5,54,0,0,458,459,5,52,0,0,459,78,1,0,
		0,0,460,461,5,117,0,0,461,462,5,105,0,0,462,463,5,110,0,0,463,464,5,116,
		0,0,464,80,1,0,0,0,465,466,5,117,0,0,466,467,5,56,0,0,467,82,1,0,0,0,468,
		469,5,117,0,0,469,470,5,49,0,0,470,471,5,54,0,0,471,84,1,0,0,0,472,473,
		5,117,0,0,473,474,5,51,0,0,474,475,5,50,0,0,475,86,1,0,0,0,476,477,5,117,
		0,0,477,478,5,54,0,0,478,479,5,52,0,0,479,88,1,0,0,0,480,481,5,102,0,0,
		481,482,5,108,0,0,482,483,5,111,0,0,483,484,5,97,0,0,484,485,5,116,0,0,
		485,90,1,0,0,0,486,487,5,100,0,0,487,488,5,111,0,0,488,489,5,117,0,0,489,
		490,5,98,0,0,490,491,5,108,0,0,491,492,5,101,0,0,492,92,1,0,0,0,493,494,
		5,102,0,0,494,495,5,51,0,0,495,496,5,50,0,0,496,94,1,0,0,0,497,498,5,102,
		0,0,498,499,5,54,0,0,499,500,5,52,0,0,500,96,1,0,0,0,501,502,5,115,0,0,
		502,503,5,116,0,0,503,504,5,114,0,0,504,505,5,105,0,0,505,506,5,110,0,
		0,506,507,5,103,0,0,507,98,1,0,0,0,508,509,5,98,0,0,509,510,5,111,0,0,
		510,511,5,111,0,0,511,512,5,108,0,0,512,100,1,0,0,0,513,514,5,118,0,0,
		514,515,5,111,0,0,515,516,5,105,0,0,516,517,5,100,0,0,517,102,1,0,0,0,
		518,519,5,110,0,0,519,520,5,117,0,0,520,521,5,108,0,0,521,522,5,108,0,
		0,522,104,1,0,0,0,523,524,5,104,0,0,524,525,5,97,0,0,525,526,5,110,0,0,
		526,527,5,100,0,0,527,528,5,108,0,0,528,529,5,101,0,0,529,106,1,0,0,0,
		530,531,5,102,0,0,531,532,5,117,0,0,532,533,5,110,0,0,533,108,1,0,0,0,
		534,535,5,109,0,0,535,536,5,97,0,0,536,537,5,114,0,0,537,538,5,107,0,0,
		538,539,5,117,0,0,539,540,5,112,0,0,540,110,1,0,0,0,541,542,5,100,0,0,
		542,543,5,105,0,0,543,544,5,99,0,0,544,545,5,116,0,0,545,112,1,0,0,0,546,
		547,5,116,0,0,547,548,5,114,0,0,548,549,5,117,0,0,549,550,5,101,0,0,550,
		114,1,0,0,0,551,552,5,102,0,0,552,553,5,97,0,0,553,554,5,108,0,0,554,555,
		5,115,0,0,555,556,5,101,0,0,556,116,1,0,0,0,557,558,5,97,0,0,558,559,5,
		115,0,0,559,118,1,0,0,0,560,561,5,43,0,0,561,120,1,0,0,0,562,563,5,45,
		0,0,563,122,1,0,0,0,564,565,5,42,0,0,565,124,1,0,0,0,566,567,5,47,0,0,
		567,126,1,0,0,0,568,569,5,37,0,0,569,128,1,0,0,0,570,571,5,43,0,0,571,
		572,5,61,0,0,572,130,1,0,0,0,573,574,5,45,0,0,574,575,5,61,0,0,575,132,
		1,0,0,0,576,577,5,42,0,0,577,578,5,61,0,0,578,134,1,0,0,0,579,580,5,47,
		0,0,580,581,5,61,0,0,581,136,1,0,0,0,582,583,5,37,0,0,583,584,5,61,0,0,
		584,138,1,0,0,0,585,586,5,43,0,0,586,587,5,43,0,0,587,140,1,0,0,0,588,
		589,5,45,0,0,589,590,5,45,0,0,590,142,1,0,0,0,591,592,5,61,0,0,592,144,
		1,0,0,0,593,594,5,61,0,0,594,595,5,61,0,0,595,146,1,0,0,0,596,597,5,33,
		0,0,597,598,5,61,0,0,598,148,1,0,0,0,599,600,5,62,0,0,600,150,1,0,0,0,
		601,602,5,60,0,0,602,152,1,0,0,0,603,604,5,62,0,0,604,605,5,61,0,0,605,
		154,1,0,0,0,606,607,5,60,0,0,607,608,5,61,0,0,608,156,1,0,0,0,609,610,
		5,33,0,0,610,158,1,0,0,0,611,612,5,38,0,0,612,613,5,38,0,0,613,160,1,0,
		0,0,614,615,5,124,0,0,615,616,5,124,0,0,616,162,1,0,0,0,617,618,5,38,0,
		0,618,164,1,0,0,0,619,620,5,124,0,0,620,166,1,0,0,0,621,622,5,94,0,0,622,
		168,1,0,0,0,623,624,5,126,0,0,624,170,1,0,0,0,625,626,5,60,0,0,626,627,
		5,60,0,0,627,172,1,0,0,0,628,629,5,62,0,0,629,630,5,62,0,0,630,174,1,0,
		0,0,631,632,5,63,0,0,632,176,1,0,0,0,633,634,5,40,0,0,634,178,1,0,0,0,
		635,636,5,41,0,0,636,180,1,0,0,0,637,638,5,123,0,0,638,182,1,0,0,0,639,
		640,5,125,0,0,640,184,1,0,0,0,641,642,5,91,0,0,642,186,1,0,0,0,643,644,
		5,93,0,0,644,188,1,0,0,0,645,646,5,59,0,0,646,190,1,0,0,0,647,648,5,44,
		0,0,648,192,1,0,0,0,649,650,5,58,0,0,650,194,1,0,0,0,651,652,5,46,0,0,
		652,196,1,0,0,0,653,657,7,0,0,0,654,656,7,1,0,0,655,654,1,0,0,0,656,659,
		1,0,0,0,657,655,1,0,0,0,657,658,1,0,0,0,658,198,1,0,0,0,659,657,1,0,0,
		0,660,664,5,34,0,0,661,663,3,213,106,0,662,661,1,0,0,0,663,666,1,0,0,0,
		664,662,1,0,0,0,664,665,1,0,0,0,665,667,1,0,0,0,666,664,1,0,0,0,667,668,
		5,34,0,0,668,200,1,0,0,0,669,675,5,96,0,0,670,674,8,2,0,0,671,672,5,96,
		0,0,672,674,5,96,0,0,673,670,1,0,0,0,673,671,1,0,0,0,674,677,1,0,0,0,675,
		673,1,0,0,0,675,676,1,0,0,0,676,678,1,0,0,0,677,675,1,0,0,0,678,679,5,
		96,0,0,679,202,1,0,0,0,680,682,7,3,0,0,681,680,1,0,0,0,682,683,1,0,0,0,
		683,681,1,0,0,0,683,684,1,0,0,0,684,204,1,0,0,0,685,687,7,3,0,0,686,685,
		1,0,0,0,687,688,1,0,0,0,688,686,1,0,0,0,688,689,1,0,0,0,689,690,1,0,0,
		0,690,694,5,46,0,0,691,693,7,3,0,0,692,691,1,0,0,0,693,696,1,0,0,0,694,
		692,1,0,0,0,694,695,1,0,0,0,695,706,1,0,0,0,696,694,1,0,0,0,697,699,7,
		4,0,0,698,700,7,5,0,0,699,698,1,0,0,0,699,700,1,0,0,0,700,702,1,0,0,0,
		701,703,7,3,0,0,702,701,1,0,0,0,703,704,1,0,0,0,704,702,1,0,0,0,704,705,
		1,0,0,0,705,707,1,0,0,0,706,697,1,0,0,0,706,707,1,0,0,0,707,740,1,0,0,
		0,708,710,5,46,0,0,709,711,7,3,0,0,710,709,1,0,0,0,711,712,1,0,0,0,712,
		710,1,0,0,0,712,713,1,0,0,0,713,723,1,0,0,0,714,716,7,4,0,0,715,717,7,
		5,0,0,716,715,1,0,0,0,716,717,1,0,0,0,717,719,1,0,0,0,718,720,7,3,0,0,
		719,718,1,0,0,0,720,721,1,0,0,0,721,719,1,0,0,0,721,722,1,0,0,0,722,724,
		1,0,0,0,723,714,1,0,0,0,723,724,1,0,0,0,724,740,1,0,0,0,725,727,7,3,0,
		0,726,725,1,0,0,0,727,728,1,0,0,0,728,726,1,0,0,0,728,729,1,0,0,0,729,
		730,1,0,0,0,730,732,7,4,0,0,731,733,7,5,0,0,732,731,1,0,0,0,732,733,1,
		0,0,0,733,735,1,0,0,0,734,736,7,3,0,0,735,734,1,0,0,0,736,737,1,0,0,0,
		737,735,1,0,0,0,737,738,1,0,0,0,738,740,1,0,0,0,739,686,1,0,0,0,739,708,
		1,0,0,0,739,726,1,0,0,0,740,206,1,0,0,0,741,742,5,47,0,0,742,743,5,47,
		0,0,743,747,1,0,0,0,744,746,8,6,0,0,745,744,1,0,0,0,746,749,1,0,0,0,747,
		745,1,0,0,0,747,748,1,0,0,0,748,750,1,0,0,0,749,747,1,0,0,0,750,751,6,
		103,0,0,751,208,1,0,0,0,752,753,5,47,0,0,753,754,5,42,0,0,754,758,1,0,
		0,0,755,757,9,0,0,0,756,755,1,0,0,0,757,760,1,0,0,0,758,759,1,0,0,0,758,
		756,1,0,0,0,759,761,1,0,0,0,760,758,1,0,0,0,761,762,5,42,0,0,762,763,5,
		47,0,0,763,764,1,0,0,0,764,765,6,104,0,0,765,210,1,0,0,0,766,768,7,7,0,
		0,767,766,1,0,0,0,768,769,1,0,0,0,769,767,1,0,0,0,769,770,1,0,0,0,770,
		771,1,0,0,0,771,772,6,105,0,0,772,212,1,0,0,0,773,776,3,215,107,0,774,
		776,8,8,0,0,775,773,1,0,0,0,775,774,1,0,0,0,776,214,1,0,0,0,777,778,5,
		92,0,0,778,779,7,9,0,0,779,216,1,0,0,0,23,0,657,664,673,675,683,688,694,
		699,704,706,712,716,721,723,728,732,737,739,747,758,769,775,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
