//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/sujal/Code/Cobra/Frontend/Cobra.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class CobraLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		IMPORT=1, CLASS=2, EXTENDS=3, NEW=4, THIS=5, IF=6, ELSE=7, WHILE=8, DO=9, 
		FOR=10, IN=11, SWITCH=12, CASE=13, DEFAULT=14, RETURN=15, BREAK=16, CONTINUE=17, 
		PUBLIC=18, PRIVATE=19, PROTECTED=20, NULL=21, INT=22, FLOAT=23, STRING=24, 
		BOOL=25, VOID=26, INTEGER=27, FLOAT_LITERAL=28, STRING_LITERAL=29, BOOLEAN_LITERAL=30, 
		PLUS=31, MINUS=32, MUL=33, DIV=34, MOD=35, AND=36, OR=37, NOT=38, EQ=39, 
		NEQ=40, GT=41, LT=42, GTE=43, LTE=44, ASSIGN=45, PLUS_ASSIGN=46, MINUS_ASSIGN=47, 
		MUL_ASSIGN=48, DIV_ASSIGN=49, INC=50, DEC=51, BITWISE_AND=52, BITWISE_OR=53, 
		BITWISE_XOR=54, BITWISE_NOT=55, BITWISE_LEFT_SHIFT=56, BITWISE_RIGHT_SHIFT=57, 
		DOT=58, ARROW=59, QUESTION_MARK=60, LPAREN=61, RPAREN=62, LBRACE=63, RBRACE=64, 
		LBRACKET=65, RBRACKET=66, SEMICOLON=67, COMMA=68, COLON=69, ID=70, WHITESPACE=71, 
		COMMENT=72, BLOCK_COMMENT=73;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"IMPORT", "CLASS", "EXTENDS", "NEW", "THIS", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "IN", "SWITCH", "CASE", "DEFAULT", "RETURN", "BREAK", "CONTINUE", 
		"PUBLIC", "PRIVATE", "PROTECTED", "NULL", "INT", "FLOAT", "STRING", "BOOL", 
		"VOID", "INTEGER", "FLOAT_LITERAL", "STRING_LITERAL", "BOOLEAN_LITERAL", 
		"EscapeSequence", "PLUS", "MINUS", "MUL", "DIV", "MOD", "AND", "OR", "NOT", 
		"EQ", "NEQ", "GT", "LT", "GTE", "LTE", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "INC", "DEC", "BITWISE_AND", "BITWISE_OR", 
		"BITWISE_XOR", "BITWISE_NOT", "BITWISE_LEFT_SHIFT", "BITWISE_RIGHT_SHIFT", 
		"DOT", "ARROW", "QUESTION_MARK", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"LBRACKET", "RBRACKET", "SEMICOLON", "COMMA", "COLON", "ID", "WHITESPACE", 
		"COMMENT", "BLOCK_COMMENT"
	};


	public CobraLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CobraLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'import'", "'class'", "'extends'", "'new'", "'this'", "'if'", "'else'", 
		"'while'", "'do'", "'for'", "'in'", "'switch'", "'case'", "'default'", 
		"'return'", "'break'", "'continue'", "'public'", "'private'", "'protected'", 
		"'null'", "'int'", "'float'", "'string'", "'bool'", "'void'", null, null, 
		null, null, "'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'!'", 
		"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'='", "'+='", "'-='", "'*='", 
		"'/='", "'++'", "'--'", "'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", "'.'", 
		"'->'", "'?'", "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "','", 
		"':'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "IMPORT", "CLASS", "EXTENDS", "NEW", "THIS", "IF", "ELSE", "WHILE", 
		"DO", "FOR", "IN", "SWITCH", "CASE", "DEFAULT", "RETURN", "BREAK", "CONTINUE", 
		"PUBLIC", "PRIVATE", "PROTECTED", "NULL", "INT", "FLOAT", "STRING", "BOOL", 
		"VOID", "INTEGER", "FLOAT_LITERAL", "STRING_LITERAL", "BOOLEAN_LITERAL", 
		"PLUS", "MINUS", "MUL", "DIV", "MOD", "AND", "OR", "NOT", "EQ", "NEQ", 
		"GT", "LT", "GTE", "LTE", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "INC", "DEC", "BITWISE_AND", "BITWISE_OR", "BITWISE_XOR", 
		"BITWISE_NOT", "BITWISE_LEFT_SHIFT", "BITWISE_RIGHT_SHIFT", "DOT", "ARROW", 
		"QUESTION_MARK", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
		"SEMICOLON", "COMMA", "COLON", "ID", "WHITESPACE", "COMMENT", "BLOCK_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Cobra.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CobraLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,73,497,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,
		1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,
		4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,
		1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,
		11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
		13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,
		17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,
		19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
		21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
		24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,4,26,304,8,26,11,
		26,12,26,305,1,27,4,27,309,8,27,11,27,12,27,310,1,27,1,27,5,27,315,8,27,
		10,27,12,27,318,9,27,1,27,1,27,4,27,322,8,27,11,27,12,27,323,1,27,4,27,
		327,8,27,11,27,12,27,328,1,27,1,27,3,27,333,8,27,1,27,4,27,336,8,27,11,
		27,12,27,337,3,27,340,8,27,1,28,1,28,1,28,5,28,345,8,28,10,28,12,28,348,
		9,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,361,8,
		29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,
		36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,
		41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,
		46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,
		51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,
		57,1,57,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,
		63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,
		70,5,70,461,8,70,10,70,12,70,464,9,70,1,71,4,71,467,8,71,11,71,12,71,468,
		1,71,1,71,1,72,1,72,1,72,1,72,5,72,477,8,72,10,72,12,72,480,9,72,1,72,
		1,72,1,73,1,73,1,73,1,73,5,73,488,8,73,10,73,12,73,491,9,73,1,73,1,73,
		1,73,1,73,1,73,1,489,0,74,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
		21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
		45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,0,63,31,65,32,67,33,
		69,34,71,35,73,36,75,37,77,38,79,39,81,40,83,41,85,42,87,43,89,44,91,45,
		93,46,95,47,97,48,99,49,101,50,103,51,105,52,107,53,109,54,111,55,113,
		56,115,57,117,58,119,59,121,60,123,61,125,62,127,63,129,64,131,65,133,
		66,135,67,137,68,139,69,141,70,143,71,145,72,147,73,1,0,9,1,0,48,57,2,
		0,69,69,101,101,2,0,43,43,45,45,2,0,34,34,92,92,8,0,34,34,39,39,92,92,
		98,98,102,102,110,110,114,114,116,116,3,0,65,90,95,95,97,122,4,0,48,57,
		65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,511,0,1,1,0,0,
		0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
		0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
		0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
		1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
		0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
		1,0,0,0,0,59,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,
		123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
		133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,
		143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,1,149,1,0,0,0,3,156,1,0,0,0,5,
		162,1,0,0,0,7,170,1,0,0,0,9,174,1,0,0,0,11,179,1,0,0,0,13,182,1,0,0,0,
		15,187,1,0,0,0,17,193,1,0,0,0,19,196,1,0,0,0,21,200,1,0,0,0,23,203,1,0,
		0,0,25,210,1,0,0,0,27,215,1,0,0,0,29,223,1,0,0,0,31,230,1,0,0,0,33,236,
		1,0,0,0,35,245,1,0,0,0,37,252,1,0,0,0,39,260,1,0,0,0,41,270,1,0,0,0,43,
		275,1,0,0,0,45,279,1,0,0,0,47,285,1,0,0,0,49,292,1,0,0,0,51,297,1,0,0,
		0,53,303,1,0,0,0,55,339,1,0,0,0,57,341,1,0,0,0,59,360,1,0,0,0,61,362,1,
		0,0,0,63,365,1,0,0,0,65,367,1,0,0,0,67,369,1,0,0,0,69,371,1,0,0,0,71,373,
		1,0,0,0,73,375,1,0,0,0,75,378,1,0,0,0,77,381,1,0,0,0,79,383,1,0,0,0,81,
		386,1,0,0,0,83,389,1,0,0,0,85,391,1,0,0,0,87,393,1,0,0,0,89,396,1,0,0,
		0,91,399,1,0,0,0,93,401,1,0,0,0,95,404,1,0,0,0,97,407,1,0,0,0,99,410,1,
		0,0,0,101,413,1,0,0,0,103,416,1,0,0,0,105,419,1,0,0,0,107,421,1,0,0,0,
		109,423,1,0,0,0,111,425,1,0,0,0,113,427,1,0,0,0,115,430,1,0,0,0,117,433,
		1,0,0,0,119,435,1,0,0,0,121,438,1,0,0,0,123,440,1,0,0,0,125,442,1,0,0,
		0,127,444,1,0,0,0,129,446,1,0,0,0,131,448,1,0,0,0,133,450,1,0,0,0,135,
		452,1,0,0,0,137,454,1,0,0,0,139,456,1,0,0,0,141,458,1,0,0,0,143,466,1,
		0,0,0,145,472,1,0,0,0,147,483,1,0,0,0,149,150,5,105,0,0,150,151,5,109,
		0,0,151,152,5,112,0,0,152,153,5,111,0,0,153,154,5,114,0,0,154,155,5,116,
		0,0,155,2,1,0,0,0,156,157,5,99,0,0,157,158,5,108,0,0,158,159,5,97,0,0,
		159,160,5,115,0,0,160,161,5,115,0,0,161,4,1,0,0,0,162,163,5,101,0,0,163,
		164,5,120,0,0,164,165,5,116,0,0,165,166,5,101,0,0,166,167,5,110,0,0,167,
		168,5,100,0,0,168,169,5,115,0,0,169,6,1,0,0,0,170,171,5,110,0,0,171,172,
		5,101,0,0,172,173,5,119,0,0,173,8,1,0,0,0,174,175,5,116,0,0,175,176,5,
		104,0,0,176,177,5,105,0,0,177,178,5,115,0,0,178,10,1,0,0,0,179,180,5,105,
		0,0,180,181,5,102,0,0,181,12,1,0,0,0,182,183,5,101,0,0,183,184,5,108,0,
		0,184,185,5,115,0,0,185,186,5,101,0,0,186,14,1,0,0,0,187,188,5,119,0,0,
		188,189,5,104,0,0,189,190,5,105,0,0,190,191,5,108,0,0,191,192,5,101,0,
		0,192,16,1,0,0,0,193,194,5,100,0,0,194,195,5,111,0,0,195,18,1,0,0,0,196,
		197,5,102,0,0,197,198,5,111,0,0,198,199,5,114,0,0,199,20,1,0,0,0,200,201,
		5,105,0,0,201,202,5,110,0,0,202,22,1,0,0,0,203,204,5,115,0,0,204,205,5,
		119,0,0,205,206,5,105,0,0,206,207,5,116,0,0,207,208,5,99,0,0,208,209,5,
		104,0,0,209,24,1,0,0,0,210,211,5,99,0,0,211,212,5,97,0,0,212,213,5,115,
		0,0,213,214,5,101,0,0,214,26,1,0,0,0,215,216,5,100,0,0,216,217,5,101,0,
		0,217,218,5,102,0,0,218,219,5,97,0,0,219,220,5,117,0,0,220,221,5,108,0,
		0,221,222,5,116,0,0,222,28,1,0,0,0,223,224,5,114,0,0,224,225,5,101,0,0,
		225,226,5,116,0,0,226,227,5,117,0,0,227,228,5,114,0,0,228,229,5,110,0,
		0,229,30,1,0,0,0,230,231,5,98,0,0,231,232,5,114,0,0,232,233,5,101,0,0,
		233,234,5,97,0,0,234,235,5,107,0,0,235,32,1,0,0,0,236,237,5,99,0,0,237,
		238,5,111,0,0,238,239,5,110,0,0,239,240,5,116,0,0,240,241,5,105,0,0,241,
		242,5,110,0,0,242,243,5,117,0,0,243,244,5,101,0,0,244,34,1,0,0,0,245,246,
		5,112,0,0,246,247,5,117,0,0,247,248,5,98,0,0,248,249,5,108,0,0,249,250,
		5,105,0,0,250,251,5,99,0,0,251,36,1,0,0,0,252,253,5,112,0,0,253,254,5,
		114,0,0,254,255,5,105,0,0,255,256,5,118,0,0,256,257,5,97,0,0,257,258,5,
		116,0,0,258,259,5,101,0,0,259,38,1,0,0,0,260,261,5,112,0,0,261,262,5,114,
		0,0,262,263,5,111,0,0,263,264,5,116,0,0,264,265,5,101,0,0,265,266,5,99,
		0,0,266,267,5,116,0,0,267,268,5,101,0,0,268,269,5,100,0,0,269,40,1,0,0,
		0,270,271,5,110,0,0,271,272,5,117,0,0,272,273,5,108,0,0,273,274,5,108,
		0,0,274,42,1,0,0,0,275,276,5,105,0,0,276,277,5,110,0,0,277,278,5,116,0,
		0,278,44,1,0,0,0,279,280,5,102,0,0,280,281,5,108,0,0,281,282,5,111,0,0,
		282,283,5,97,0,0,283,284,5,116,0,0,284,46,1,0,0,0,285,286,5,115,0,0,286,
		287,5,116,0,0,287,288,5,114,0,0,288,289,5,105,0,0,289,290,5,110,0,0,290,
		291,5,103,0,0,291,48,1,0,0,0,292,293,5,98,0,0,293,294,5,111,0,0,294,295,
		5,111,0,0,295,296,5,108,0,0,296,50,1,0,0,0,297,298,5,118,0,0,298,299,5,
		111,0,0,299,300,5,105,0,0,300,301,5,100,0,0,301,52,1,0,0,0,302,304,7,0,
		0,0,303,302,1,0,0,0,304,305,1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,306,
		54,1,0,0,0,307,309,7,0,0,0,308,307,1,0,0,0,309,310,1,0,0,0,310,308,1,0,
		0,0,310,311,1,0,0,0,311,312,1,0,0,0,312,316,5,46,0,0,313,315,7,0,0,0,314,
		313,1,0,0,0,315,318,1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,0,317,340,1,
		0,0,0,318,316,1,0,0,0,319,321,5,46,0,0,320,322,7,0,0,0,321,320,1,0,0,0,
		322,323,1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,340,1,0,0,0,325,327,
		7,0,0,0,326,325,1,0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,
		0,329,330,1,0,0,0,330,332,7,1,0,0,331,333,7,2,0,0,332,331,1,0,0,0,332,
		333,1,0,0,0,333,335,1,0,0,0,334,336,7,0,0,0,335,334,1,0,0,0,336,337,1,
		0,0,0,337,335,1,0,0,0,337,338,1,0,0,0,338,340,1,0,0,0,339,308,1,0,0,0,
		339,319,1,0,0,0,339,326,1,0,0,0,340,56,1,0,0,0,341,346,5,34,0,0,342,345,
		3,61,30,0,343,345,8,3,0,0,344,342,1,0,0,0,344,343,1,0,0,0,345,348,1,0,
		0,0,346,344,1,0,0,0,346,347,1,0,0,0,347,349,1,0,0,0,348,346,1,0,0,0,349,
		350,5,34,0,0,350,58,1,0,0,0,351,352,5,116,0,0,352,353,5,114,0,0,353,354,
		5,117,0,0,354,361,5,101,0,0,355,356,5,102,0,0,356,357,5,97,0,0,357,358,
		5,108,0,0,358,359,5,115,0,0,359,361,5,101,0,0,360,351,1,0,0,0,360,355,
		1,0,0,0,361,60,1,0,0,0,362,363,5,92,0,0,363,364,7,4,0,0,364,62,1,0,0,0,
		365,366,5,43,0,0,366,64,1,0,0,0,367,368,5,45,0,0,368,66,1,0,0,0,369,370,
		5,42,0,0,370,68,1,0,0,0,371,372,5,47,0,0,372,70,1,0,0,0,373,374,5,37,0,
		0,374,72,1,0,0,0,375,376,5,38,0,0,376,377,5,38,0,0,377,74,1,0,0,0,378,
		379,5,124,0,0,379,380,5,124,0,0,380,76,1,0,0,0,381,382,5,33,0,0,382,78,
		1,0,0,0,383,384,5,61,0,0,384,385,5,61,0,0,385,80,1,0,0,0,386,387,5,33,
		0,0,387,388,5,61,0,0,388,82,1,0,0,0,389,390,5,62,0,0,390,84,1,0,0,0,391,
		392,5,60,0,0,392,86,1,0,0,0,393,394,5,62,0,0,394,395,5,61,0,0,395,88,1,
		0,0,0,396,397,5,60,0,0,397,398,5,61,0,0,398,90,1,0,0,0,399,400,5,61,0,
		0,400,92,1,0,0,0,401,402,5,43,0,0,402,403,5,61,0,0,403,94,1,0,0,0,404,
		405,5,45,0,0,405,406,5,61,0,0,406,96,1,0,0,0,407,408,5,42,0,0,408,409,
		5,61,0,0,409,98,1,0,0,0,410,411,5,47,0,0,411,412,5,61,0,0,412,100,1,0,
		0,0,413,414,5,43,0,0,414,415,5,43,0,0,415,102,1,0,0,0,416,417,5,45,0,0,
		417,418,5,45,0,0,418,104,1,0,0,0,419,420,5,38,0,0,420,106,1,0,0,0,421,
		422,5,124,0,0,422,108,1,0,0,0,423,424,5,94,0,0,424,110,1,0,0,0,425,426,
		5,126,0,0,426,112,1,0,0,0,427,428,5,60,0,0,428,429,5,60,0,0,429,114,1,
		0,0,0,430,431,5,62,0,0,431,432,5,62,0,0,432,116,1,0,0,0,433,434,5,46,0,
		0,434,118,1,0,0,0,435,436,5,45,0,0,436,437,5,62,0,0,437,120,1,0,0,0,438,
		439,5,63,0,0,439,122,1,0,0,0,440,441,5,40,0,0,441,124,1,0,0,0,442,443,
		5,41,0,0,443,126,1,0,0,0,444,445,5,123,0,0,445,128,1,0,0,0,446,447,5,125,
		0,0,447,130,1,0,0,0,448,449,5,91,0,0,449,132,1,0,0,0,450,451,5,93,0,0,
		451,134,1,0,0,0,452,453,5,59,0,0,453,136,1,0,0,0,454,455,5,44,0,0,455,
		138,1,0,0,0,456,457,5,58,0,0,457,140,1,0,0,0,458,462,7,5,0,0,459,461,7,
		6,0,0,460,459,1,0,0,0,461,464,1,0,0,0,462,460,1,0,0,0,462,463,1,0,0,0,
		463,142,1,0,0,0,464,462,1,0,0,0,465,467,7,7,0,0,466,465,1,0,0,0,467,468,
		1,0,0,0,468,466,1,0,0,0,468,469,1,0,0,0,469,470,1,0,0,0,470,471,6,71,0,
		0,471,144,1,0,0,0,472,473,5,47,0,0,473,474,5,47,0,0,474,478,1,0,0,0,475,
		477,8,8,0,0,476,475,1,0,0,0,477,480,1,0,0,0,478,476,1,0,0,0,478,479,1,
		0,0,0,479,481,1,0,0,0,480,478,1,0,0,0,481,482,6,72,0,0,482,146,1,0,0,0,
		483,484,5,47,0,0,484,485,5,42,0,0,485,489,1,0,0,0,486,488,9,0,0,0,487,
		486,1,0,0,0,488,491,1,0,0,0,489,490,1,0,0,0,489,487,1,0,0,0,490,492,1,
		0,0,0,491,489,1,0,0,0,492,493,5,42,0,0,493,494,5,47,0,0,494,495,1,0,0,
		0,495,496,6,73,0,0,496,148,1,0,0,0,16,0,305,310,316,323,328,332,337,339,
		344,346,360,462,468,478,489,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
